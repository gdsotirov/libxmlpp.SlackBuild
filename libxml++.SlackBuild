#!/bin/sh
#
# Slackware build script for Libxml++
# Copyright (C) 2012-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=libxml++
VERSION=3.2.4
BUILD=${BUILD:-1}
ARCH=${ARCH:-i586}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Please, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/$NAME-$VERSION.tar.xz || exit 3
SRC=$TMP/$NAME-$VERSION
cd $SRC
fix_source

# Configure
meson --prefix /usr --libdir lib${LIBDIRSUFFIX} builddir . || exit 41
cd builddir
meson configure \
    -Dbuildtype=release \
    -Dbuild-documentation=true \
    -Dbuild-examples=true \
    -Dbuild-tests=true \
    -Dcpp_args="$SLKCFLAGS" \
    -Ddefault_library=shared \
    -Dstrip=true || exit 42

# Build, test & install
meson compile --verbose || exit 5
meson test --verbose || exit 6
DESTDIR=$PKG \
meson install || exit 7

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG $NAME-$VERSION )
# Additionally copy examples and move docs in the right place
cp --archive $SRC/examples $PKG/usr/doc/${NAME}-${VERSION}/examples
mv $PKG/usr/share/doc/${NAME}-3.0/manual    $PKG/usr/doc/${NAME}-${VERSION}
mv $PKG/usr/share/doc/${NAME}-3.0/reference $PKG/usr/doc/${NAME}-${VERSION}
rm --recursive $PKG/usr/share/doc

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamp \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamp \
        $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/$NAME-$VERSION
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamp \
        $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install --mode 644 --preserve-timestamp \
        $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install --mode 644 --preserve-timestamp \
        $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Pack
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

